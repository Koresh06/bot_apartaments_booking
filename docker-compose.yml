version: '3.11'

services:
  postgres:
    image: postgres:15-alpine
    restart: "no"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: rental_bot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - "01-simple-alchemy-postgres:/var/lib/postgresql/data"
    command: [ "sh", "-c", "apk add --no-cache musl-locales musl-locales-lang && docker-entrypoint.sh postgres" ]

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot # Укажите путь к Dockerfile для бота
    restart: "always"
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:12345@postgres/rental_bot
    env_file:
      - .env

  web:
    build:
      context: .
      dockerfile: Dockerfile.web # Укажите путь к Dockerfile для FastAPI
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:12345@postgres/rental_bot
    env_file:
      - .env

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web

  migrate:
    build:
      context: .
    command: [ "poetry", "run", "alembic", "upgrade", "head" ]
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://postgres:12345@postgres/rental_bot
    volumes:
      - .:/src

volumes:
  01-simple-alchemy-postgres:
