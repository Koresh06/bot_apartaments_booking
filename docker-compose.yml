version: '3.11'

services:
  postgres:
    image: postgres:15-alpine
    restart: "no"
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - "01-simple-alchemy-postgres:/var/lib/postgresql/data"
    command: [ "sh", "-c", "apk add --no-cache musl-locales musl-locales-lang && docker-entrypoint.sh postgres" ]

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
      REDIS_URL: redis://${REDIS_HOST}:${REDIS_PORT}
      PYTHONPATH: /src 
    volumes:
      - .:/src
    command: ["python", "-m", "src.main_bot"] 

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
      REDIS_URL: redis://${REDIS_HOST}:${REDIS_PORT}
      PYTHONPATH: /src  
    volumes:
      - .:/src
    command: ["python", "-m", "src.main_fastapi"]  

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
      - bot

volumes:
  01-simple-alchemy-postgres:
