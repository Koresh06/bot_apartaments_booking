from operator import itemgetter
from aiogram import F
from aiogram.types import ContentType
from aiogram_dialog import Dialog, StartMode, Window
from aiogram_dialog.widgets.text import Format, Const, Multi
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Next,
    Row,
    Back,
    Group,
    SwitchTo,
    Start,
    NumberedPager,
    StubScroll,
    Select,
)


from .states import (
    EditApartmentSG,
    MenuLandlordSG,
    RegisterApartmentSG,
    LandlordApartmentsSG,
    OrdersBookingSG,
)
from .getters import (
    getter_catalog_landlord_apartments,
    getter_confirm_edit_photos,
    getter_edit_apartment,
    getter_edit_apartment_photos,
    getter_get_media,
    getter_apartment_details,
    getter_is_available,
    getter_get_city,
    getter_orders_booking,
)
from .handlers import (
    confirm_photos,
    edit_data,
    handle_city,
    handle_edit_city,
    handle_update_is_available,
    no_confirm_booking,
    on_delete,
    on_delete_apartment,
    on_input_photo,
    on_next,
    on_prev,
    skip_apartment_number_handler,
    error_handler,
    update_apartment_information,
    close_dialog,
    handle_update_apartment_photos,
    yes_confirm_booking,
)


menu_loandlord_dialog = Dialog(
    Window(
        Const("üè† –ú–µ–Ω—é –∞—Ä–µ–Ω–¥–æ–¥–∞—Ç–µ–ª—è"),
        Start(
            Const("‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞"),
            id="register_apartament",
            state=RegisterApartmentSG.city,
        ),
        Start(
            Const("üìã –ú–æ–∏ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã"),
            id="current_apartments",
            state=LandlordApartmentsSG.catalog,
        ),
        Start(
            Const("üìù –ó–∞–∫–∞–∑—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"),
            id="orders_booking",
            state=OrdersBookingSG.orders,
        ),
        state=MenuLandlordSG.start,
    ),
)


register_apartament_dialog = Dialog(
    Window(
        Const("üèôÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:"),
        Group(
            Select(
                Format("üåÜ {item[0]}"),
                id="city",
                items="citys",
                item_id_getter=itemgetter(1),
                on_click=handle_city,
            ),
            width=4,
        ),
        Row(
            Start(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="cancel_form_register",
                state=MenuLandlordSG.start,
                show_mode=StartMode.RESET_STACK,
            ),
            Next(when="name"),
        ),
        state=RegisterApartmentSG.city,
        getter=getter_get_city,
    ),
    Window(
        Multi(
            Const("üè† –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã:"),
            Format("üõ£Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã: {street}", when="street"),
            sep="\n\n",
        ),
        TextInput(
            id="street",
            type_factory=str,
            on_success=Next(),
            on_error=error_handler,
        ),
        Row(
            Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
            Next(when="street"),
        ),
        state=RegisterApartmentSG.street,
    ),
    Window(
        Multi(
            Const("üè° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–º–∞:"),
            Format("üè† –ù–æ–º–µ—Ä –¥–æ–º–∞: {house_number}", when="house_number"),
            sep="\n\n",
        ),
        TextInput(
            id="house_number",
            type_factory=int,
            on_success=Next(),
            on_error=error_handler,
        ),
        Row(
            Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
            Next(when="house_number"),
        ),
        state=RegisterApartmentSG.house_number,
    ),
    Window(
        Multi(
            Const("üè¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ!):"),
            Format("üè° –ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã: {apartment_number}", when="apartment_number"),
            sep="\n\n",
        ),
        TextInput(
            id="apartment_number",
            type_factory=int,
            on_success=Next(),
            on_error=error_handler,
        ),
        Button(
            Const("üîÑ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"), id="skip", on_click=skip_apartment_number_handler
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
        Next(when="apartment_number"),
        state=RegisterApartmentSG.apartment_number,
    ),
    Window(
        Multi(
            Const("üí∞ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–µ–Ω—É –∑–∞ –¥–µ–Ω—å:"),
            Format("üíµ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {price_per_day}", when="price_per_day"),
            sep="\n\n",
        ),
        TextInput(
            id="price_per_day",
            type_factory=float,
            on_success=Next(),
            on_error=error_handler,
        ),
        Row(
            Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
            Next(when="price_per_day"),
        ),
        state=RegisterApartmentSG.price_per_day,
    ),
    Window(
        Multi(
            Const("üõèÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:"),
            Format("üõå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: {rooms}", when="rooms"),
            sep="\n\n",
        ),
        TextInput(
            id="rooms",
            type_factory=int,
            on_success=Next(),
            on_error=error_handler,
        ),
        Row(
            Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
            Next(when="rooms"),
        ),
        state=RegisterApartmentSG.rooms,
    ),
    Window(
        Multi(
            Const("üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞:"),
            Format("üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {description}", when="description"),
            sep="\n\n",
        ),
        TextInput(
            id="description",
            type_factory=str,
            on_success=Next(),
            on_error=error_handler,
        ),
        Row(
            Back(Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")),
            Next(when="description"),
        ),
        state=RegisterApartmentSG.description,
    ),
    Window(
        Const("üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ (–º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –≥—Ä—É–ø–ø–æ–π —Ñ–æ—Ç–æ)"),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Button(
            Format("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ #{media_number}"),
            id="del",
            on_click=on_delete,
            when="media_count",
        ),
        MessageInput(content_types=[ContentType.PHOTO], func=on_input_photo),
        Next(Const("‚û°Ô∏è –î–∞–ª–µ–µ"), id="confirm_photos", when="confirm"),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
        state=RegisterApartmentSG.photo,
        getter=getter_get_media,
    ),
    Window(
        Format(
            "<b>üèôÔ∏è –ì–æ—Ä–æ–¥: {city}</b>\n"
            "<b>üõ£Ô∏è –£–ª–∏—Ü–∞: {street}</b>\n"
            "<b>üè† –î–æ–º: {house_number}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment_number}</b>\n"
            "<b>üíµ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {price_per_day}</b>\n"
            "<b>üõå –ö–æ–º–Ω–∞—Ç: {rooms}</b>\n"
            "<b>üìñ –û–ø–∏—Å–∞–Ω–∏–µ: {description}</b>\n"
        ),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Button(Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="confirm", on_click=confirm_photos),
        Start(
            Const("‚ùå –û—Ç–º–µ–Ω–∞"),
            id="cancel_form_register",
            state=MenuLandlordSG.start,
            show_mode=StartMode.RESET_STACK,
        ),
        state=RegisterApartmentSG.confirm,
        getter=getter_get_media,
    ),
)


my_apartmernt_landlord_dialog = Dialog(
    Window(
        Const(
            "‚ö†Ô∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤. "
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é! üè†",
            when=~F["data"],
        ),
        Start(
            Const("‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞"),
            id="register_apartament",
            state=RegisterApartmentSG.city,
            when=~F["data"],
        ),
        Format(
            "<b>üèôÔ∏è –ì–æ—Ä–æ–¥: {apartment[city]}</b>\n"
            "<b>üìç –£–ª–∏—Ü–∞: {apartment[street]}</b>\n"
            "<b>üè† –î–æ–º: {apartment[house_number]}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment[apartment_number]}</b>\n"
            "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {apartment[price_per_day]}</b>\n"
            "<b>üõèÔ∏è –ö–æ–º–Ω–∞—Ç: {apartment[rooms]}</b>\n"
            "<b>‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {apartment[description]}</b>\n"
            "<b>‚úÖ –°—Ç–∞—Ç—É—Å: {apartment[is_available]}</b>\n",
            when="data",
        ),
        DynamicMedia(selector="media", when="data"),
        Group(
            Next(Const("üîç –î–µ—Ç–∞–ª–∏"), id="details"),
            Row(
                Button(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="next", on_click=on_prev),
                Button(
                    Format("{current_page}/{count_page}"),
                    id="paginator",
                ),
                Button(Const("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è"), id="prev", on_click=on_next),
                when="is_apartments",
            ),
            Button(Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"), id="edit", on_click=edit_data),
            Button(Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"), id="delete", on_click=on_delete_apartment),
            Start(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back",
                state=MenuLandlordSG.start,
                show_mode=StartMode.RESET_STACK,
            ),
            when="data",
        ),
        state=LandlordApartmentsSG.catalog,
        getter=getter_catalog_landlord_apartments,
    ),
    Window(
        Format(
            "<b>üèôÔ∏è –ì–æ—Ä–æ–¥: {apartment[city]}</b>\n"
            "<b>üìç –£–ª–∏—Ü–∞: {apartment[street]}</b>\n"
            "<b>üè† –î–æ–º: {apartment[house_number]}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment[apartment_number]}</b>\n"
            "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {apartment[price_per_day]}</b>\n"
            "<b>üõèÔ∏è –ö–æ–º–Ω–∞—Ç: {apartment[rooms]}</b>\n"
            "<b>‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {apartment[description]}</b>\n"
            "<b>‚úÖ –°—Ç–∞—Ç—É—Å: {apartment[is_available]}</b>\n"
        ),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="back", show_mode=StartMode.RESET_STACK),
        state=LandlordApartmentsSG.details,
        getter=getter_apartment_details,
    ),
)


edit_apartment_dialog = Dialog(
    Window(
        Format("üõ†Ô∏è –ü–∞–Ω–µ–ª—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞: #{apartment_id}"),
        Group(
            SwitchTo(Const("üèôÔ∏è –ì–æ—Ä–æ–¥"), id="city", state=EditApartmentSG.city),
            SwitchTo(Const("üìç –£–ª–∏—Ü–∞"), id="street", state=EditApartmentSG.street),
            SwitchTo(
                Const("üè† –î–æ–º"), id="house_number", state=EditApartmentSG.house_number
            ),
            SwitchTo(
                Const("üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞"),
                id="apartment_number",
                state=EditApartmentSG.apartment_number,
            ),
            SwitchTo(
                Const("üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å"),
                id="price_per_day",
                state=EditApartmentSG.price_per_day,
            ),
            SwitchTo(Const("üõèÔ∏è –ö–æ–º–Ω–∞—Ç"), id="rooms", state=EditApartmentSG.rooms),
            SwitchTo(
                Const("‚úçÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ"), id="description", state=EditApartmentSG.description
            ),
            SwitchTo(Const("üì∏ –§–æ—Ç–æ"), id="photo", state=EditApartmentSG.photo),
            id="edit_group",
            width=4,
        ),
        Button(
            Format("–°—Ç–∞—Ç—É—Å: {is_available}"),
            id="is_available",
            on_click=handle_update_is_available,
        ),
        Start(
            Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
            id="cancel_form_edit",
            state=LandlordApartmentsSG.catalog,
            show_mode=StartMode.RESET_STACK,
        ),
        state=EditApartmentSG.edit,
        getter=getter_is_available,
    ),
    Window(
        Multi(
            Format("<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –≥–æ—Ä–æ–¥: {apartment[city]}</b>"),
            Const("üèôÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥: "),
            sep="\n\n",
        ),
        Group(
            Select(
                Format("{item[0]}"),
                id="city",
                items="citys",
                item_id_getter=itemgetter(1),
                on_click=handle_edit_city,
            ),
            width=4,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.city,
        getter=getter_get_city,
    ),
    Window(
        Multi(
            Format("üè† –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —É–ª–∏—Ü–∞: <b>{apartment[street]}</b>"),
            Const("üõ£Ô∏è –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —É–ª–∏—Ü—É:"),
            sep="\n\n",
        ),
        TextInput(
            id="street",
            type_factory=str,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.street,
    ),
    Window(
        Multi(
            Format("üè† –í–∞—à —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä –¥–æ–º–∞: <b>{apartment[house_number]}</b>"),
            Const("üî¢ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –¥–æ–º–∞:"),
            sep="\n\n",
        ),
        TextInput(
            id="house_number",
            type_factory=int,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.house_number,
    ),
    Window(
        Multi(
            Format(
                "üè¢ –í–∞—à —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã: <b>{apartment[apartment_number]}</b>"
            ),
            Const("üî¢ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã:"),
            sep="\n\n",
        ),
        TextInput(
            id="apartment_number",
            type_factory=int,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.apartment_number,
    ),
    Window(
        Multi(
            Format("üí∞ –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: <b>{apartment[price_per_day]}</b>"),
            Const("üíµ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –∑–∞ –¥–µ–Ω—å:"),
            sep="\n\n",
        ),
        TextInput(
            id="price_per_day",
            type_factory=float,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.price_per_day,
    ),
    Window(
        Multi(
            Format("üõèÔ∏è –í–∞—à–µ —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: <b>{apartment[rooms]}</b>"),
            Const("üî¢ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:"),
            sep="\n\n",
        ),
        TextInput(
            id="rooms",
            type_factory=int,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.rooms,
    ),
    Window(
        Multi(
            Format("‚úçÔ∏è –í–∞—à–µ —Ç–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: <b>{apartment[description]}</b>"),
            Const("üìù –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:"),
            sep="\n\n",
        ),
        TextInput(
            id="description",
            type_factory=str,
            on_success=update_apartment_information,
            on_error=error_handler,
        ),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.description,
    ),
    Window(
        Format("üì∏ –í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Ñ–æ—Ç–æ:"),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Next(Const("üñºÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ"), id="edit_photo"),
        SwitchTo(Const("–ù–∞–∑–∞–¥"), id="back", state=EditApartmentSG.edit),
        state=EditApartmentSG.photo,
        getter=getter_edit_apartment_photos,
    ),
    Window(
        Const(
            "üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ (–º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –≥—Ä—É–ø–ø–æ–π —Ñ–æ—Ç–æ)",
            when="text",
        ),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Button(
            Format("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ #{media_number}"),
            id="del",
            on_click=on_delete,
            when="media_count",
        ),
        MessageInput(content_types=[ContentType.PHOTO], func=on_input_photo),
        Button(
            Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
            id="confirm_photos",
            on_click=handle_update_apartment_photos,
            when="confirm",
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="back"),
        state=EditApartmentSG.confirm_photos,
        getter=getter_confirm_edit_photos,
    ),
    getter=getter_edit_apartment,
    on_close=close_dialog,
)



view_booking_orders_landlord = Dialog(
    Window(
        Const("–ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç", when=~F["data"],),
        Format(
            "<b>ID:{booking.id}</b>\n"
            "<b>üèôÔ∏è –ì–æ—Ä–æ–¥: {apartment[city]}</b>\n"
            "<b>üõ£Ô∏è –£–ª–∏—Ü–∞: {apartment[street]}</b>\n"
            "<b>üè† –î–æ–º: {apartment[house_number]}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment[apartment_number]}</b>\n"
            "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {apartment[price_per_day]} ‚ÇΩ</b>\n"
            "<b>üõèÔ∏è –ö–æ–º–Ω–∞—Ç: {apartment[rooms]}</b>\n"
            "<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ: {apartment[description]}</b>\n"
            "<b>üìÖ –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {apartment[booking_start_date]}</b>\n"
            "<b>üìÖ –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {apartment[booking_end_date]}</b>\n",
            when='data',
        ),
        Group(
            Button(Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="confirm", on_click=yes_confirm_booking),
            Next(Const("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"), id="cancel"),
            Row(
                Button(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="next", on_click=on_prev),
                Button(
                    Format("{current_page}/{count_page}"),
                    id="paginator",
                ),
                Button(Const("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è"), id="prev", on_click=on_next),
            ),
            when="data",
        ),
        state=OrdersBookingSG.orders,
        getter=getter_orders_booking,
    ),
    Window(
        Const("‚úèÔ∏è –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:"),
        TextInput(
            id="cancel_reason",
            type_factory=str,
            on_success=Next(),
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="back"),
        state=OrdersBookingSG.cancel_message,
    ),
    Window(
        Const("‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ?"),
        Button(Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="confirm", on_click=no_confirm_booking),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="back"),
        state=OrdersBookingSG.cancle_—Åonfirm,
    ),
)