from operator import itemgetter
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram_dialog import Dialog, DialogManager, StartMode, Window
from aiogram_dialog.widgets.text import Format, Const
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Next,
    Row,
    Back,
    Group,
    Start,
    NumberedPager,
    StubScroll,
    Select
)

from src.core.repo.requests import RequestsRepo
from src.tgbot.dialog.apartments_landlord.getters import getter_apartment_details
from .handlers import (
    handle_city_filter,
    handle_confirm_min_max_price,
    handle_room_filter,
    on_booking,
    on_phone,
)
from .states import (
    FilteredCatalogApartmentsSG,
    FiltersSG
)
from .getters import (
    getter_apartments_data,
    getter_filters,
    getter_get_city,
    getter_get_rooms,
    getter_min_max_price,
)
from src.tgbot.dialog.apartments_landlord.handlers import error_handler, on_next, on_prev


router = Router()


filter_catalog_apartments_dialog = Dialog(
    Window(
        Const("üåÜ –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥"),
        Group(
            Select(
                Format("{item[0]}"),
                id="city",
                items="citys",
                item_id_getter=itemgetter(1),
                on_click=handle_city_filter,
            ),
            width=4,
        ),
        state=FiltersSG.city,
        getter=getter_get_city,
    ),
    Window(
        Const("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –≥–æ—Ä–æ–¥—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. –ù–∞–∂–º–∏—Ç–µ - /start", when=~F["count"]),
        Const("üí∞ –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É:", when="count"),
        TextInput(
            id="min_price",
            type_factory=float,
            on_success=Next(),
            on_error=error_handler,
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), when="count"),
        state=FiltersSG.min_price,
    ),
    Window(
        Const("üí∏ –£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É:"),
        TextInput(
            id="max_price",
            type_factory=float,
            on_success=Next(),
            on_error=error_handler,
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
        state=FiltersSG.max_price,
    ),
    Window(
        Format("üìä –£–∫–∞–∑–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω: <b>{min_price}-{max_price}</b>"),
        Button(
            Const("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="confirm", on_click=handle_confirm_min_max_price
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
        state=FiltersSG.confirm_range,
        getter=getter_min_max_price,
    ),
    Window(
        Const("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É —Ü–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ - /start", when=~F["count"]),
        Const("üè† –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:", when="count"),
        Group(
            Select(
                Format("{item[0]}"),
                id="room",
                items="rooms",
                item_id_getter=itemgetter(1),
                on_click=handle_room_filter,
            ),
            width=4,
            when="count"
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
        state=FiltersSG.rooms,
        getter=getter_get_rooms,
    ),
    getter=getter_filters,
)


catalog_users_apartments_dialog = Dialog(
    Window(
        Const(
            "‚ö†Ô∏è –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ üîç –∏–ª–∏ –∑–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ üïí. "
            "–ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! üîÑ",
            when=~F["data"],
        ),
        Format(
            "<b>üåÜ –ì–æ—Ä–æ–¥: {apartment[city]}</b>\n"
            "<b>üõ£Ô∏è –£–ª–∏—Ü–∞: {apartment[street]}</b>\n"
            "<b>üè† –î–æ–º: {apartment[house_number]}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment[apartment_number]}</b>\n"
            "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {apartment[price_per_day]}‚ÇΩ</b>\n"
            "<b>üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: {apartment[rooms]}</b>\n"
            "<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ: {apartment[description]}</b>\n",
            when="data",
        ),
        DynamicMedia(selector="media", when="data"),
        Group(
            Next(Const("üîç –î–µ—Ç–∞–ª–∏"), id="details"),
            Button(Const("üìû –¢–µ–ª–µ—Ñ–æ–Ω"), id="phone", on_click=on_phone),
            Button(Const("üìÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"), id="booking", on_click=on_booking),
            Row(
                Button(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="next", on_click=on_prev),
                Button(
                    Format("{current_page}/{count_page}"),
                    id="paginator",
                ),
                Button(Const("–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è"), id="prev", on_click=on_next),
                when="is_apartments",
            ),
            Start(
                Const("üîç –§–∏–ª—å—Ç—Ä"),
                id="main_filters",
                state=FiltersSG.city,
                mode=StartMode.RESET_STACK,
            ),
            when="data",
        ),
        state=FilteredCatalogApartmentsSG.start,
        getter=getter_apartments_data,
    ),
    Window(
        Format(
            "<b>üåÜ –ì–æ—Ä–æ–¥: {apartment[city]}</b>\n"
            "<b>üõ£Ô∏è –£–ª–∏—Ü–∞: {apartment[street]}</b>\n"
            "<b>üè† –î–æ–º: {apartment[house_number]}</b>\n"
            "<b>üè¢ –ö–≤–∞—Ä—Ç–∏—Ä–∞: {apartment[apartment_number]}</b>\n"
            "<b>üí∞ –¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å: {apartment[price_per_day]}‚ÇΩ</b>\n"
            "<b>üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç: {apartment[rooms]}</b>\n"
            "<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ: {apartment[description]}</b>\n"
        ),
        DynamicMedia(selector="media"),
        StubScroll(id="pages", pages="media_count"),
        Group(
            NumberedPager(scroll="pages", when=F["pages"] > 1),
            width=8,
        ),
        Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"), id="back", show_mode=StartMode.RESET_STACK),
        state=FilteredCatalogApartmentsSG.details,
        getter=getter_apartment_details,
    ),
)


@router.message(CommandStart())
async def command_start_process(message: Message, dialog_manager: DialogManager):
    repo: RequestsRepo = dialog_manager.middleware_data.get("repo")
    await repo.bot_users.add_user(
        tg_id=message.from_user.id,
        chat_id=message.chat.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
        full_name=message.from_user.full_name,
    )
    await dialog_manager.start(state=FiltersSG.city,mode=StartMode.RESET_STACK,)


# @router.message(CommandStart())
# async def cmd_start(message: Message):
#     await message.answer("–ü—Ä–∏–≤–µ—Ç!")


# @dp.message(Command("filter"))
# async def command_filter_process(
#     callback: CallbackQuery, dialog_manager: DialogManager
# ):
#     await dialog_manager.start(
#         state=FiltersApartmentsSG.start, mode=StartMode.RESET_STACK
#     )
